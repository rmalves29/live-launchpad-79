// Script de diagn√≥stico para identificar problemas com WhatsApp
const fetch = require('node-fetch');

const SUPABASE_URL = 'https://omctxrcluiojyhttymeu.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9tY3R4cmNsdWlvanlodHR5bWV1Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczOTY2MzM1NCwiZXhwIjoyMDU1MjM5MzU0fQ.SDdSO6rr8vKGlbpFuBQSoIvFuSaRHZRv5OAH5yXSwJ4';

async function diagnosticar() {
  console.log('\nüîç DIAGN√ìSTICO DO SERVIDOR WHATSAPP\n');
  console.log('='.repeat(60));

  try {
    // 1. Verificar conex√£o com Supabase
    console.log('\n1Ô∏è‚É£ Verificando conex√£o com Supabase...');
    const response = await fetch(`${SUPABASE_URL}/rest/v1/tenants?select=*`, {
      headers: {
        'apikey': SUPABASE_KEY,
        'Authorization': `Bearer ${SUPABASE_KEY}`
      }
    });

    if (!response.ok) {
      console.log('‚ùå ERRO: N√£o foi poss√≠vel conectar ao Supabase');
      console.log(`   Status: ${response.status}`);
      return;
    }
    console.log('‚úÖ Conex√£o com Supabase OK');

    // 2. Verificar tenants
    console.log('\n2Ô∏è‚É£ Verificando tenants ativos...');
    const tenants = await response.json();
    
    if (!tenants || tenants.length === 0) {
      console.log('‚ùå PROBLEMA: Nenhum tenant encontrado no banco de dados');
      console.log('   SOLU√á√ÉO: Crie um tenant primeiro no sistema');
      return;
    }
    
    console.log(`‚úÖ ${tenants.length} tenant(s) encontrado(s):`);
    tenants.forEach(t => {
      console.log(`   - ${t.name} (ID: ${t.id})`);
    });

    // 3. Verificar integra√ß√µes WhatsApp
    console.log('\n3Ô∏è‚É£ Verificando integra√ß√µes WhatsApp...');
    const integResponse = await fetch(
      `${SUPABASE_URL}/rest/v1/integration_whatsapp?select=*&is_active=eq.true`,
      {
        headers: {
          'apikey': SUPABASE_KEY,
          'Authorization': `Bearer ${SUPABASE_KEY}`
        }
      }
    );

    const integrations = await integResponse.json();
    
    if (!integrations || integrations.length === 0) {
      console.log('‚ùå PROBLEMA: Nenhuma integra√ß√£o WhatsApp ativa encontrada');
      console.log('   SOLU√á√ÉO: Ative a integra√ß√£o WhatsApp nas configura√ß√µes');
      return;
    }

    console.log(`‚úÖ ${integrations.length} integra√ß√£o(√µes) ativa(s):`);
    integrations.forEach(i => {
      const tenant = tenants.find(t => t.id === i.tenant_id);
      console.log(`   - Tenant: ${tenant?.name || 'Desconhecido'}`);
      console.log(`     API URL: ${i.api_url || 'N√£o configurada'}`);
      console.log(`     Webhook: ${i.webhook_url || 'N√£o configurada'}`);
    });

    // 4. Verificar depend√™ncias Node
    console.log('\n4Ô∏è‚É£ Verificando depend√™ncias...');
    try {
      require('whatsapp-web.js');
      console.log('‚úÖ whatsapp-web.js instalado');
    } catch (e) {
      console.log('‚ùå whatsapp-web.js N√ÉO instalado');
      console.log('   SOLU√á√ÉO: npm install whatsapp-web.js');
      return;
    }

    try {
      require('qrcode-terminal');
      console.log('‚úÖ qrcode-terminal instalado');
    } catch (e) {
      console.log('‚ùå qrcode-terminal N√ÉO instalado');
      console.log('   SOLU√á√ÉO: npm install qrcode-terminal');
      return;
    }

    // 5. Verificar sess√µes antigas
    console.log('\n5Ô∏è‚É£ Verificando sess√µes antigas...');
    const fs = require('fs');
    const authDir = '.wwebjs_auth_v2';
    
    if (fs.existsSync(authDir)) {
      console.log('‚ö†Ô∏è Diret√≥rio de sess√µes encontrado: .wwebjs_auth_v2');
      console.log('   Se o QR n√£o aparecer, execute:');
      console.log('   Remove-Item -Recurse -Force .wwebjs_auth_v2');
    } else {
      console.log('‚úÖ Nenhuma sess√£o antiga encontrada');
    }

    console.log('\n' + '='.repeat(60));
    console.log('\n‚úÖ DIAGN√ìSTICO COMPLETO!');
    console.log('\nSe tudo est√° OK acima, voc√™ pode iniciar o servidor:');
    console.log('   node server-whatsapp-v2.js');
    console.log('\nSe o QR n√£o aparecer:');
    console.log('   1. Pare o servidor (Ctrl+C)');
    console.log('   2. Remove-Item -Recurse -Force .wwebjs_auth_v2');
    console.log('   3. taskkill /F /IM chrome.exe');
    console.log('   4. node server-whatsapp-v2.js');
    console.log('\n');

  } catch (error) {
    console.error('\n‚ùå ERRO durante diagn√≥stico:', error.message);
    console.error('   Verifique sua conex√£o com internet e tente novamente\n');
  }
}

diagnosticar();
